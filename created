#Parameters
param(
    [string]$src = "C:\temp",
    [string]$dest = "c:\temp\dest"
)

#Functions

#Create a function named CheckFolder that checks for the existence of a specific directory/folder that is passed
#to it as a parameter. Also, include a switch parameter named create. If the directory/folder does not exist and
#the create switch is specified, a new folder should be created using the name of the folder/directory that was
#passed to the function.
function Check-Folder([string]$path, [switch]$create) {
    $exists = Test-Path $path
    if (!$exists -and $create) {
        #create the directory because it doesn't exist
        mkdir $path | Out-Null
        $exists = Test-Path $path
    }
    return $exists
}

#Create a function named DisplayFolderStatistics to display folder statistics for a directory/path that is passed
#to it. Output should include the name of the folder, number of docs in the folder, and total size of all docs in
#that directory.
function Display-FolderStatus([string]$path){
    $docs = Get-ChildItem $path -Recurse | Where-Object {!$_.PSIsContainer}
    $totals = $docs | Measure-Object -Property Length -Sum
    $stats = "" | Select-Object Path, Count, Size
    $stats.Path = $path
    $stats.Count = $totals.Count
    $stats.Size = [math]::Round($totals.Sum / 1MB, 2)
    return $stats
}

#Main processing
#a) Test for existence of the src folder (using the CheckFolder function).
$srcExists = Check-Folder $src
if (!$srcExists) {
    Write-Host "The src directory is not found. Script cannot continue."
    Exit
}

#b) Test for the existence of the dest folder; create it if it is not found (using the CheckFolder function
#with the â€“create switch).
$destExists = Check-Folder $dest -create
if (!$destExists) {
    Write-Host "The dest directory is not found. Script cannot continue."
    Exit
}

#c) Copy each file to the appropriate dest.
#get all the docs that need to be copied
$docs = Get-ChildItem $src -Recurse | Where-Object {!$_.PSIsContainer}

#c-i) Display a message when copying a file. The message should list where the file is being
#moved from and where it is being moved to.
foreach ($file in $docs) {
    $ext = $file.Extension.Replace(".", "")
    $extDestDir = "$dest\$ext"
    
    #check if dest folder exists
    $extDestDirExists = Check-Folder $extDestDir -create
    if (!$extDestDirExists) {
        Write-Host "The dest directory is not found. Script cannot continue."
        Exit
    }
    #copy file
    Copy-Item $file.FullName $extDestDir
}

#d) Display each target folder name with the file count and byte count for each folder.
$dirs = Get-ChildItem $dest | Where-Object {$_.PSIsContainer}
foreach ($dir in $dirs) {
    Display-FolderStatus $dir.FullName
}
